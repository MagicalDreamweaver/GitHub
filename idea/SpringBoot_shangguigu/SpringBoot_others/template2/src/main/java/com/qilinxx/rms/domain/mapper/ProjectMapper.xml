<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qilinxx.rms.domain.mapper.ProjectMapper">
  <resultMap id="BaseResultMap" type="com.qilinxx.rms.domain.model.Project">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="pid" jdbcType="VARCHAR" property="pid" />
    <result column="host" jdbcType="VARCHAR" property="host" />
    <result column="people" jdbcType="VARCHAR" property="people" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="topic" jdbcType="VARCHAR" property="topic" />
    <result column="genre" jdbcType="VARCHAR" property="genre" />
    <result column="start_time" jdbcType="BIGINT" property="startTime" />
    <result column="end_time" jdbcType="BIGINT" property="endTime" />
    <result column="project_source" jdbcType="VARCHAR" property="projectSource" />
    <result column="money" jdbcType="INTEGER" property="money" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="level" jdbcType="VARCHAR" property="level" />
    <result column="rank" jdbcType="VARCHAR" property="rank" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="set_time" jdbcType="BIGINT" property="setTime" />
    <result column="profile" jdbcType="VARCHAR" property="profile" />
    <result column="state" jdbcType="CHAR" property="state" />
    <result column="create_id" jdbcType="INTEGER" property="createId" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="mid" jdbcType="INTEGER" property="mid" />
    <result column="remake" jdbcType="VARCHAR" property="remake" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    pid, host, people, name, topic, genre, start_time, end_time, project_source, money, 
    number, level, rank, type, set_time, profile, state, create_id, create_time, update_time, 
    mid, remake
  </sql>
  <select id="selectByExample" parameterType="com.qilinxx.rms.domain.model.ProjectExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.qilinxx.rms.domain.model.ProjectExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.qilinxx.rms.domain.model.ProjectExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update project
    <set>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=VARCHAR},
      </if>
      <if test="record.host != null">
        host = #{record.host,jdbcType=VARCHAR},
      </if>
      <if test="record.people != null">
        people = #{record.people,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.topic != null">
        topic = #{record.topic,jdbcType=VARCHAR},
      </if>
      <if test="record.genre != null">
        genre = #{record.genre,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=BIGINT},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=BIGINT},
      </if>
      <if test="record.projectSource != null">
        project_source = #{record.projectSource,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=INTEGER},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=VARCHAR},
      </if>
      <if test="record.rank != null">
        rank = #{record.rank,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.setTime != null">
        set_time = #{record.setTime,jdbcType=BIGINT},
      </if>
      <if test="record.profile != null">
        profile = #{record.profile,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=CHAR},
      </if>
      <if test="record.createId != null">
        create_id = #{record.createId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.mid != null">
        mid = #{record.mid,jdbcType=INTEGER},
      </if>
      <if test="record.remake != null">
        remake = #{record.remake,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update project
    set pid = #{record.pid,jdbcType=VARCHAR},
      host = #{record.host,jdbcType=VARCHAR},
      people = #{record.people,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      topic = #{record.topic,jdbcType=VARCHAR},
      genre = #{record.genre,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=BIGINT},
      end_time = #{record.endTime,jdbcType=BIGINT},
      project_source = #{record.projectSource,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=INTEGER},
      number = #{record.number,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=VARCHAR},
      rank = #{record.rank,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      set_time = #{record.setTime,jdbcType=BIGINT},
      profile = #{record.profile,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=CHAR},
      create_id = #{record.createId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      mid = #{record.mid,jdbcType=INTEGER},
      remake = #{record.remake,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>